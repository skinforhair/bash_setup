#!/bin/bash


function print_collection_members(){
	#this comes up if they are changing the number in the collection
	mylist=$(echo "select set_num, title, year from $movieTable where set_id = $1 order by set_num asc"|mysql $dbOptions)
counter=0
IFS=$'\n' read -rd '' -a array <<<"$mylist"
while [ $counter -lt ${#array[@]} ]; do
	M=${array[$counter]}
	space=`expr index "$M" $'\t'`
	NN=${M:0:$space}
	T=${M:$space:${#M}}
	echo -e "${yellow}$NN${NC}: ${Cyan}$T${NC}"
	counter=$((counter+1))
done
	#(future, maybe - insert a movie in order and push all others down)
} #END print_collection_members

function pick_group() {
     myChoice="pie"
     read -rd '' -a array <<<"$1"
    while ! [[ $myChoice =~ $NUMBERS ]] || [ $myChoice -lt 0 ] || [ $myChoice -gt ${#array[@]} ]; do
     counter=0
     for i in ${array[@]}; do
        myName=$(echo "select name from $2 where id = ${array[$counter]}"|mysql $dbOptions) 
	echo -e "   $counter:   $myName (id ${yellow}${array[$counter]}${NC})"
	counter=$((counter+1))
     done
	echo "   $counter:   None of the Above"
	echo -n "Please choose (0-${#array[@]}): "
	read myChoice
     done
    #echo -e "mychoice is ${yellow}$myChoice${NC} and i am returning ${red}${array[$myChoice]}${NC}"
	if [ "$myChoice" == "$counter" ]; then
		output=0
	else
		output=${array[$myChoice]}
	fi

     case "$3" in 
	"s") searchTerms[5]="$output";;
	"c") searchTerms[6]="$output";;
	"n") searchTerms[7]="$output";;
     esac
} #END pick_group


function change_set_attributes() {
if [ "$3" == "s" ]; then
		myTable=$setTable
		myType="SuperSet"
		myColor="${yellow}"
		myArray="5"
	elif [ "$3" == "c" ]; then
		myTable=$collectionTable
		myType="Collection"
		myColor="${Cyan}"
		myArray="6"
	else
		myTable=$movieTable
		myType="Number"
		myColor="${green}"
		myArray="7"
	fi

returnID=
currentID="$2"
currName="$1"
 while ! [[ $returnID =~ $NUMBERS ]]; do

  if [ "$returnID" != "" ]; then
	currentID=$returnID
	currName="$inputName"
  fi

   if [ "$3" == "n" ]; then
        print_collection_members "${searchTerms[6]}"
   fi 
   echo -en "Change $myColor$myType${NC} to (Enter to stay as $myColor$currName${NC} id $currentID): "
   read inputName
   if [ "$inputName" == "" ]; then
        returnID="$currentID"
   fi
   if [ "$inputName" == "none" ]; then
        returnID="0"
   fi
   if [ "$3" == "n" ]; then
        if [[ $inputName =~ $NUMBERS ]]; then
          returnID=$inputName
        fi
   else


     tCount=$(echo "select count(*) from $myTable where name LIKE '%$inputName%'"|mysql $dbOptions)
     tID=$(echo "select id from $myTable where name LIKE '%$inputName%'" |mysql $dbOptions)
     if [ $tCount -gt 1 ]; then
        nID=$(echo "select id from $myTable where name = '$inputName'" |mysql $dbOptions)
        if [ "$nID" = "" ]; then
          echo -e "Multiple entries found for $myType named $myColor$inputName${NC}!"
                echo -e "before, tid is ${red}$tID${NC}"
                pick_group "$tID" "$myTable" "$3"
                tID="${searchTerms[$myArray]}"
                #echo -e "setting tID to ${red}$tID${NC} (from pick_group)"
        else
          tID=$nID
        fi
     fi
#echo -e "tID is ${yellow}$tID${NC}"
     if [ "$tID" == "" ]; then
        YesNo "Create $myType called $inputName?" "n"
        if [ "$?" == "0" ]; then
          returnID=$2
        elif [ "$3" = "c" ]; then
          something=$(echo "insert into $myTable(id, name, path, tmdb_id, keywords, genres) VALUES (NULL, '$inputName', '$inputName', '', '', '')" |mysql $dbOptions)
          returnID=$(echo "select id from $myTable where name = '$inputName'" |mysql $dbOptions)
        else
          something=$(echo "insert into $myTable(id, name, path, keywords, genres) VALUES (NULL, '$inputName', '$inputName', '', '')" |mysql $dbOptions)
          returnID=$(echo "select id from $myTable where name = '$inputName'" |mysql $dbOptions)
        fi
     else
        returnID=$tID
     fi
   fi
 done

 #echt "$returnID"
 searchTerms[$myArray]="$returnID"
} #END change_set_attributes


function prompt_for_sets() {
# echo -e "TMDB:\t${yellow} $1 ${NC}"
# echo -e "LocalDB:\t${yellow} $2 ${NC}"
 if [ "$2" != "" ]; then
	cID=$(echo "select set_id from $movieTable where id=$2" | mysql $dbOptions)
	C=$(echo "select name from $collectionTable where id=$cID" |mysql $dbOptions)
	N=$(echo "select set_num from $movieTable where id=$2" | mysql $dbOptions)

	ssID=$(echo "select superset_id from $movieTable where id=$2" | mysql $dbOptions)
	S=$(echo "select name from $setTable where id=$ssID" |mysql $dbOptions)
 else
	JSON=$(get_movie_json "$1")
	C=`echo $JSON |jq '.belongs_to_collection' |jq '.name' |sed 's/\"//g' |sed 's;\ Collection;;g'`
	#make sure only one set gets selected
	cID=$(echo "select id from $collectionTable where name LIKE \"$C%\" limit 1" |mysql $dbOptions)
	if [ "$cID" != "" ]; then
	  ssID=$(echo "select superset_id from $movieTable where set_id=$cID limit 1" |mysql $dbOptions)
	  S=$(echo "select name from $setTable where id=$ssID" |mysql $dbOptions)
	  N=$(echo "select count(*) from $movieTable where set_id=$cID" |mysql $dbOptions)
	  N=$((N+1))
	else
	  S=""	
	  ssID=0
	  N=0
	fi
 fi
	if [ "$ssID" != "" ]; then
            searchTerms[5]=$ssID
            S=$(echo "select name from $setTable where id = $ssID" |mysql $dbOptions)
	else
	    searchTerms[5]=0
	fi
	if [ "$cID" != "" ]; then
            searchTerms[6]=$cID
            C=$(echo "select name from $collectionTable where id = $cID" |mysql $dbOptions)
	else
	    searchTerms[6]=0
	fi
            searchTerms[7]=$N


MakeChanges=1
 while [ "${MakeChanges,,}" != "k" ]; do

            ssID=${searchTerms[5]}
            S=$(echo "select name from $setTable where id = $ssID" |mysql $dbOptions)
            cID=${searchTerms[6]}
            C=$(echo "select name from $collectionTable where id = $cID" |mysql $dbOptions)
            N=${searchTerms[7]}

  if [ "$S" = "" ]; then S="none"; fi
  if [ "$C" = "" ]; then C="none"; fi
  if [ "$N" = "" ]; then N="0"; fi
  echo -e "    ${yellow}[S]${NC}et\t\t${Cyan}[C]${NC}ollection\t${green}[N]${NC}umber"
  echo -e "${yellow}$S\t\t${Cyan}$C\t${green}$N${NC}"
	 if [ "${MakeChanges,,}" != "k" ]; then
	  echo -en "Change ${yellow}[S]${NC}et, ${Cyan}[C]${NC}ollection, ${green}[N]${NC}umber? (S,C,N): "
 	  if [ "$3" == "y" ]; then
		WhichChange=""
	  else
	  	read WhichChange
	  fi
	  case "${WhichChange,,}" in 
		"s") change_set_attributes "$S" "$ssID" "s";;
		"c") change_set_attributes "$C" "$cID" "c";;
		"n") change_set_attributes "$N" "$N" "n";;
		"" ) echo "saving!";MakeChanges="k";;
	  esac
	 fi
 done 

} #END prompt_for_sets
