#!/bin/bash

#function epguides_title(){

#} #epguides_title

#function epguides_airdate(){

#} #epguides_airdate

#function get_title_from_json(){

#} #get_title_from_json

readTitleFromOnline(){
SHOWNAME=$1
Season=$2
Episode=$3
Multi=$4
URL="http://epguides.com/"
PAGES="$DIR/epguides/pages/"

if [ "$SHOWNAME" == "Mythbusters" ]; then
  Season=$((Season+2002))
fi

PageDump=$(EpGuideName_local "$1" "$Season" "$3")

#put it in an array
arr=($PageDump)

#echo "===="
#echo $PageDump
#echo "==="

#search for a bracket to find the title in the line
COUNTER=0
LocalTitlePos=$COUNTER
LocalTitle=""
while [ $COUNTER -lt ${#arr[@]} ]; do
#echo "arrCounter $COUNTER is ${arr[$COUNTER]}"
        if [ $LocalTitlePos -eq 0 ]; then
                pos=`expr index "${arr[$COUNTER]}" [`
                if [ $pos -gt 0 ]; then
                        LocalTitlePos=$COUNTER
                else
                        COUNTER=$((COUNTER+1))
                fi
        else
                LocalTitle="$LocalTitle${arr[$COUNTER]}."
                COUNTER=$((COUNTER+1))
        fi
done
if [ "$LocalTitle" == "" ]; then
 COUNTER=5
 LocalTitlePos=5
 while [ $COUNTER -lt ${#arr[@]} ]; do
 #echo "arrCounter $COUNTER is ${arr[$COUNTER]}"
     LocalTitle="$LocalTitle${arr[$COUNTER]}."
     COUNTER=$((COUNTER+1))
 done
fi
if [ "$LocalTitle" == "" ]; then
  echo "NO TITLE FOUND!"
fi
#echo "LocalTitle is $LocalTitle"
#echo "line is 521"
LocalAirDate="${arr[$((LocalTitlePos-3))]}-${arr[$((LocalTitlePos-2))]}-${arr[$((LocalTitlePos-1))]}"
#echo "LocalAirDate is $LocalAirDate"
if [ ${#LocalAirDate} -gt 9 ]; then
  LocalAirDate="${arr[$((LocalTitlePos-1))]}"
  #echo "LocalAirDate is $LocalAirDate"
fi
#replace slashes in date with dashes
LocalAirDate=${LocalAirDate//\//-}

#echo "LocalAirDate is $LocalAirDate"
if [ "$LocalAirDate" != "PAGE:" ]; then
echo "Checking epguides.com page..."
#cut off the leading brackets
pos=`expr index "$LocalTitle" ]`
LocalTitle=${LocalTitle:$pos}

echo "LocalTitle is $LocalTitle"

#now cut off the end brackets if they exist
pos=`expr index "$LocalTitle" [`
if [ $pos -gt 0 ]; then
        pos=$((pos-1))
        LocalTitle=${LocalTitle:0:$pos}
fi

#remove commas from title
LocalTitle=${LocalTitle//\,//}
#remove quotes from title
LocalTitle=${LocalTitle//\"/}
#remove colons from title
LocalTitle=${LocalTitle//\:/}
#remove slashes from title
LocalTitle=${LocalTitle//\//-}
#remove double periods
LocalTitle=$(echo "$LocalTitle" |sed 's;\.\.;\.;g')

else
 echo -e "Pulling from local json... ${gray}ReadTitleFromOnline${NC}"
line=$(get_next_episode_from_json "$1" "$2" "$3" "$4")
#echo "line is $line"
  LocalAirDate=$(echo "$line" |awk '{print $3"-"$4"-"$5}')
  LocalTitle=$(echo "$line" |awk '{for(i=6;i<NF;i++)printf"%s",$i OFS;if(NF)printf"%s",$NF;printf ORS}' |tr ' ' '.')

fi #if LocalAirDate != PAGE:


if [ "${LocalTitle:0:4}" == "FAIL" ]; then
   echo -e "${red}ERROR.${NC} No episode name found in epguides or json for $1. exiting."
  exit 1;
fi


#tack on the Air date
 if [ "${LocalTitle:$((${#LocalTitle}-1))}" == "." ];then
   LocalTitle="${LocalTitle:0:$((${#LocalTitle}-1))}"
 fi
LocalTitle=$(echo "$LocalTitle" |sed 's;\.\.;\.;g')
 t="$LocalTitle"
 LocalTitle="$LocalTitle.($LocalAirDate)"
 echo -e "${yellow}$1 ${NC}Season ${blue}$2 ${NC}Episode ${white}$3${NC}: (${yellow}$LocalAirDate${NC}) - ${white}$t${NC}"
   #error checking
     if [ "$LocalTitle" == "()" ]; then
           echo $URL
           exit 1;
     fi
Title="$LocalTitle"
AirDate="$LocalAirDate"

} ##end readTitleFromOnline

