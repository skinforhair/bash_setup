#!/bin/bash
DIR="/root/.skinforhair_settings/bin/GLaDOS/media_library/tv_organizer/epguides"

#############################
### Libraries and Functions
#############################
source $DIR/lib/vars
source $DIR/lib/db_connection
for f in $DIR/lib/functions/*; do if [ -f $f ]; then source $f;fi; done
source /root/.skinforhair_settings/lib/colors
PAGES="$DIR/pages/"
A="$DIR/tmp/Aired.txt"
U="$DIR/tmp/Upcoming.txt"
N="$DIR/tmp/Notfound.txt"
Ltmp="$DIR/tmp/tmpfile.txt"

outfile="available_episodes.txt"
remotepath=$(ssh cavejohnson@wheatley "echo \$lBIN")
remotepath="$remotepath/episodes/lib/lists/"
output="$DIR/tmp/$outfile"


function cleanTMP() {
if [ -f $A ]; then rm $A; fi
if [ -f $U ]; then rm $U; fi
if [ -f $N ]; then rm $N; fi
if [ -f $Ltmp ]; then rm $Ltmp; fi
}
cleanTMP
touch $A
touch $U
touch $N

SA=$(echo "select id from $tvshows where active_download=1" |mysql $dbOptions)
SArr=($SA)

maxlen=35
i=0
c=1
while [ $i -lt ${#SArr[@]} ]; do
  showID="${SArr[i]}"
  i=$((i+1))
show="id=$showID"
SN=$(echo "select showname from $tvshows where $show"|mysql $dbOptions)


#display progress
curlen=${#SN}
#echo -en "Checking show "
 perc=$(echo "scale=2; $i*100/${#SArr[@]}" |bc)
 perc=${perc:0:2}
  if [ "${perc:1:1}" == "." ]; then
        perc=${perc:0:1}
  fi
  if [ $perc -lt 33 ]; then
        echo -en "${red}"
  elif [ $perc -lt 66 ]; then
        echo -en "${yellow}"
  else
        echo -en "${green}"
  fi
 if [ $i -lt 10 ]; then
        echo -en "[ "
 else
        echo -en "["
 fi
 echo -en "$i${NC}/${#SArr[@]}]"

 if false; then
  case "$c" in
        "1") echo -en "   | "\\r;c=2;;
        "2") echo -en "   / "\\r;c=3;;
        "3") echo -en "   - "\\r;c=4;;
        "4") echo -en "   \ "\\r;c=1;;
  esac
 fi

echo -en " ${blue}[ $SN"
 while [ $curlen -lt $maxlen ]; do
  echo -en " "
  curlen=$((curlen+1))
 done
echo -en "]${NC}\\r"

  answer=$($DIR/individual_episode "$SN")
  case "$?" in
	0) echo "$SN" >> $N;;
	1) echo "$answer" >> $A;;
	2) echo "$answer" >> $U;;
  esac

done

#sort the files:
sort -k1 -n $A |cut -f 1 -d ' ' --complement >> $Ltmp
rm -f $A
while read line; do echo "${line:1:$((${#line}-2))}" >> $A;done<$Ltmp

rm -f $Ltmp

sort -k1 -n $U |cut -f 1 -d ' ' --complement >> $Ltmp
rm -f $U
while read line; do echo "${line:1:$((${#line}-2))}" >> $U;done<$Ltmp

DT=`date "+%Y%m%d (%A)"`

echo "Generated $DT" > $output
                echo -e "\n---- Available ----\n" >> $output
                cat "$A" >> $output
                echo -e "\n---- Upcoming ----\n" >> $output
                cat "$U" >> $output
                echo -e "\n---- No Future Episodes listed ----\n" >> $output
                cat "$N" >> $output


#update NOT FOUND list with current season
temp=
while read line; do
 CurSeason=$(ls "/shares/video/tv/$line/"|grep Season|sort|tail -1)
 CurSeason=${CurSeason:7}
  echo "$line -- Current $CurSeason" >> temp 
done < $N
mv temp $N

echo "Generated $DT" | cat - $A > temp && mv temp $A
echo "Generated $DT" | cat - $U > temp && mv temp $U
echo "Generated $DT" | cat - $N > temp && mv temp $N

function upload_to_wheatley(){
   ssh cavejohnson@wheatley "if [ -a $remotepath$outfile ]; then rm $remotepath$outfile; fi;if [ -a $remotepath$A ]; then rm $remotepath$A; fi;if [ -a $remotepath$U ]; then rm $remotepath$U; fi;if [ -a $remotepath$N ]; then rm $remotepath$N; fi"
    scp $output $A $U $N cavejohnson@wheatley:$remotepath
                if [ $? == 0 ]; then
                        #rm $output
                        stamp=$(date +%m%d%Y)
                        mv $output $DIR/archive/$outfile.$stamp
                fi
}

upload_to_wheatley

#cleanTMP
