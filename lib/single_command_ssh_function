function single_command_ssh_function(){

HOSTLIST="$pENV/GLaDOS/home_ssh_hostlist"
if [ ! -f $HOSTLIST ]; then
 echo "ERROR. No hostlist found at $HOSTLIST"
 #exit 1;
fi

INPUT="${1,,}"
 line=$(grep $INPUT $HOSTLIST)
 REMOTEBOX=$(echo "$line" |awk '{print $2}')
 REMOTEUSER=$(echo "$line" |awk '{print $3}')
 REMOTEPATH=$(echo "$line" |awk '{print $4}')

if [ "$REMOTEBOX" == "" ]; then
 echo "I'm not sure what box $1 is...."
 echo "Available ssh servers are found in $HOSTLIST :"
 while read L; do
  echo "$L" |awk '{print $1}'
 done < $HOSTLIST
 #exit 1
fi

## 3 is a subdirectory of REMOTEPATH to send to
if [ ! -z "$3" ]; then
  REMOTEPATH="$REMOTEPATH/$3"
fi  #if there is a $3


if [ -z "$2" ]; then
        #if no filename specified, then just ssh over
        ssh $REMOTEUSER@$REMOTEBOX -t "cd $REMOTEPATH; bash --login"
else
#echo "parsing $2"
        #if directory, then recursively copy that directory
        if [[ -d "$2" ]]; then
        #       echo "copying directory"
                scp -rp "$2" $REMOTEUSER@$REMOTEBOX:$REMOTEPATH
        else
                #if file, then copy that file
                if [[ -e "$2" ]]; then
        #               echo "copying $2 to $1"
                        scp "$2" $REMOTEUSER@$REMOTEBOX:$REMOTEPATH
                else
                        #if the file doesn't exist on this system, copy from remote
        #               echo "copying $2 from $1"
                        scp $REMOTEUSER@$REMOTEBOX:"$2" .
                fi
        fi
fi  #if there is a $2
}

