#!/bin/bash
 COLORS="$pLIB/colors"
 if [ -a $COLORS ]; then source $COLORS; fi
 
 rows=4
 cols=5
 
 rcount=0
 ccount=0
 minScore=3
 SYMBOLS=0
 
 LENGTH=8
 
 readonly re_digit='[[:digit:]]'
 readonly re_lower='[[:lower:]]'
 readonly re_punct='[[:punct:]]'
 readonly re_space='[[:space:]]'
 readonly re_upper='[[:upper:]]'
 
 
 
 
 while getopts ":l:s" opt; do
     case $opt in
         l) LENGTH="$OPTARG" ;;
         s) SYMBOLS=1 ;;
         ?)
              exit 1
              ;;
     esac
 done
 if [ "$LENGTH" == "0" ] || [ "$LENGTH" == "" ]; then LENGTH=8; fi
 
 
 function changeChar() {
     stringZ="$1"
     stringY=""
     pos="$2"
     len=${#stringZ}
      declare -a symArray=("!" "!" "-" "_")
      sLen=${#symArray[@]}
      sLen=$((sLen-1))
     counter=0
     while [ $counter -lt $len ]; do
         if [ "$counter" == "$pos" ]; then
             num=$(echo $[ 1 + $[ RANDOM % $sLen ]])
             nextletter=${symArray[$num]}
         else
             nextletter=$(echo ${stringZ:$counter:1})
         fi
         stringY="$stringY$nextletter"
         counter=$((counter+1))
     done
 
     echo "$stringY"
 } #END changeChar
function addSymbols(){
     stringZ="$1"
     len=${#stringZ}
     quar=$((len / 4))
     howmany=$(echo $[ 1 + $[ RANDOM % $quar ]])
 
 #    echo "changing $howmany characters"
     while [ $howmany -gt 0 ]; do
         position=$(echo $[ 0 + $[ RANDOM % $len ]])
 #        echo "position is $position"
         stringZ=$(changeChar "$stringZ" "$position")
         howmany=$((howmany-1))
     done
 
     echo "$stringZ"
 
 } #END addSymbols
 
 echo "Length is $LENGTH"
 echo ""
 
 echo ""
 
 while [ $rcount -lt $rows ]; do
     while [ $ccount -lt $cols ]; do
             score=0
             while [ $score -lt $minScore ]; do
                 x=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w $LENGTH | head -n 1)
                 if [ "$SYMBOLS" == "1" ]; then
                     #echo -n "Adding Symbols..."
                     x=$(addSymbols $x)
                 fi
                 score=0
                 for re in "$re_digit" "$re_lower" "$re_punct" "$re_space" "$re_upper"
                 do
                   [[ $x =~ $re ]] && let score++
                 done
             done
         multiplier=$((LENGTH-8))
         multiplier=$((multiplier/2))
         multiplier=$((multipler+1))
         #score=$(($score * $multiplier))
         mynum=$(($score * $multiplier))
         echo -n "   "
         if [ -a $COLORS ]; then
             if [ $score -lt 3 ]; then
                 echo -en "${red}"
             elif [ $score -lt 4 ]; then
                 echo -en "${yellow}"
             else
                 echo -en "${green}"
             fi
             echo -en "$x ${NC}"
         else
             echo -n "$x ($score)"
         fi
         valid=0
         ccount=$((ccount+1))
     done
 echo ""
  rcount=$((rcount+1))
  ccount=0
 done
 
 echo ""

