#!/bin/bash



function date_display() {
 d=$1
 m=$2
 y=$3

 daysaway=$(get_days_away "$d" "$m" "$y")
 wday=$(day_name "$d" "$m" "$y")
 wmonth=$(month_name "$m")

 
 if [ $daysaway -gt 1 ]; then
  echo -e "${white}\nAiring in $daysaway days: ($wday, $wmonth $d) -  $m/$d/$y${NC}"
 elif [ $daysaway -lt 1 ]; then
  echo -e "${white}\nAiring Tonight: ($m/$d/$y)${NC}"
 else
  echo -e "${white}\nAiring Tomorrow: ($wday, $wmonth $d) -  $m/$d/$y${NC}"
 fi
 echo "---------------------------------------------------------"
} #date_display


function upcoming_shows() {
 re='^[0-9]+$'
 if [[ $1 =~ $re ]]; then
  limit=$1
 else
  case "$1" in 
   "full" ) limit=365;;
   *)	    limit=7;;
  esac
 fi
  todayshows=0
  cDate=`date +%Y%m%d`
  check_list_freshness
  echo -e "${yellow}UPCOMING SHOWS: (Next $limit Days)${NC}"
  echo ""
  while read line; do
   if [ "${line:0:9}" != "Generated" ]; then
     str_to_array "$line"
     if [ $(get_days_away "${strArray[4]}" "${strArray[5]}" "${strArray[6]}") -le $limit ]; then 
       compDate="${strArray[6]}${strArray[5]}${strArray[4]}"
       if [ $compDate -eq `date +%Y%m%d` ] && [ $todayshows -lt 1 ]; then
	date_display "${strArray[4]}" "${strArray[5]}" "${strArray[6]}"
	todayshows=$((todayshows+1))
       elif [ $compDate -gt $cDate ]; then
 	#list how many days in th efuture it is
	date_display "${strArray[4]}" "${strArray[5]}" "${strArray[6]}"
	cDate=$compDate
	#echo -e "Show\t\tS-Ep\tTitle"
       fi
       echo -e "${strArray[0]}\t\t\t${strArray[2]}-${strArray[1]}\t${strArray[3]}"
     fi
   fi
  done < $UPCOMING
}
