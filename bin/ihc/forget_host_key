#!/bin/bash

# Colors for Text #
 ###################
 
  NC='\033[0m' # no color
  white='\033[1;37m'
  red='\033[0;31m'
  green='\033[0;32m'
  yellow='\033[1;33m'
  gray='\033[0;37m'


### - Find local path (See /home/jejackso/.bin/lib/.localize) ###
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do 
 DIR="$( cd -P "." && pwd )"
 SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

CURRENT_USER=$(who am i |awk '{print $1}')
KNOWN_HOSTS_FILE="/home/$CURRENT_USER/.ssh/known_hosts"
HOST_TO_REMOVE=""


function usage() {
 echo "usage: $0 <options> <hostname>"
 echo "Options:
        -h:  Shows this help screen
        -m:  Remove the key from the Master Service Account (MSA)
        -u:  Remove the key from a specific user (/home/username/.ssh/known_hosts)
      " 
 exit 0
}


#Prompt for a hostname and remove it from known_hosts
while getopts ":hu:m" opt; do
  case ${opt,,} in
    m) KNOWN_HOSTS_FILE="/home/gabagool/.ssh/known_hosts";;
    h) usage;;
    u) read -p "Username: " INPUT_USER;KNOWN_HOSTS_FILE="/home/$INPUT_USER/.ssh/known_hosts";;
    \?) usage;;
    :) echo "Option -$OPTARG requires an argument";usage;;
  esac
done

shift $((OPTIND - 1))
first_arg=$1
second_arg=$2

if [ "$HOST_TO_REMOVE" == "" ] && [ "$first_arg" == "" ]; then
    read -p "Enter a hostname to remove: " HOST_TO_REMOVE
else
    HOST_TO_REMOVE="$first_arg"
fi

 
# echo "HOST: $HOST_TO_REMOVE"
# echo "FILE: $KNOWN_HOSTS_FILE"


if ! [ -a "$KNOWN_HOSTS_FILE" ]; then
    echo "Cannot find $KNOWN_HOSTS_FILE!"
    exit 1
else
    foundHost=$(grep $HOST_TO_REMOVE $KNOWN_HOSTS_FILE)
    if [ "$foundHost" != "" ]; then
        numFound=$(echo "$foundHost" |wc -l)
        if [ $numFound -eq 1 ]; then
             YN="7"; while [ "${YN,,}" != "y" ] && [ "${YN,,}" != "n" ]; do
               read -p "Delete $HOST_TO_REMOVE from $KNOWN_HOSTS_FILE? [y/n]: " YN
             done
             if [ "${YN,,}" == "n" ]; then
                 echo "Exiting."
                 exit 0
             fi
          echo "Removing $HOST_TO_REMOVE from $KNOWN_HOSTS_FILE"
          sed -i "/$HOST_TO_REMOVE/d" $KNOWN_HOSTS_FILE
          exit 0
        else
            YN="7"; while [ "${YN,,}" != "y" ] && [ "${YN,,}" != "n" ]; do
                read -p "$numFound Results matching $HOST_TO_REMOVE, delete them all from $KNOWN_HOSTS_FILE? [y/n]: " YN
            done
            if [ "${YN,,}" == "n" ]; then
                echo "Exiting."
                exit 0
            fi
          sed -i "/$HOST_TO_REMOVE/d" $KNOWN_HOSTS_FILE
          exit 0
        fi
    else
        echo "$HOST_TO_REMOVE was not found in $KNOWN_HOSTS_FILE"
        exit 1
    fi
fi







  #sed -i '/$HOST_TO_REMOVE/d' $KNOWN_HOSTS_FILE"

#echo "HOST: $HOST_TO_REMOVE"
#echo "FILE: $KNOWN_HOSTS_FILE"
