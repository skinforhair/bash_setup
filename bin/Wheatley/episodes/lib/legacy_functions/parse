#!/bin/bash

function parse() {
DOWNLOAD_IT="$1"
printed=0
        grab_shows
        echo -e "\n${yellow}New Shows:${NC}\n"
while read line; do
  if [ "$line" == "---- Upcoming ----" ]; then
        if [ "$printed" == "0" ]; then
          upcoming_shows
        else
         if [ "$DOWNLOAD_IT" == "download" ]; then
          lnum=`awk '/---- Upcoming ----/{print NR}' $DIR/$FN`
          lnum=$((lnum+1))
          echo "" >> $FN_OUT
          echo "$line" >> $FN_OUT
          echo "" >> $FN_OUT
          sed -n "$lnum"',$p' $FN >> $FN_OUT
         fi
        fi
        break
  fi
  if [ "${line:0:3}" != "---" ] && [ "${line:0:1}" != "*" ] && [ "${line:0:3}" != "Gen" ] && [ "$line" != "" ] && [ "${line:0:7}" != "Updated" ]; then
#    echo "***  $line"
 printed=$((printed+1))
        lineArr=($line)
         i=0
          date="${lineArr[$((${#lineArr[@]}-1))]}"
          day="${date:0:2}"
          mon="${date:3:3}"
           mon=$(month_to_number "$mon")
          yer="${date:7:2}"
           yer="20$yer"
          date="$yer$mon$day"

        hyphen=`expr index "$line" -`
         hyphen=$((hyphen+2))
        stringZ=(${line:0:$hyphen})
         index=$((${#stringZ[@]}-1))
         epnum="${stringZ[index]}"
        hyphen=`expr index "$epnum" -`
         s=${epnum:0:$((hyphen-1))}
           if [ $s -lt 10 ] && [ ${#s} -lt 2 ]; then
                s="0$s"
           fi
         e=${epnum:$hyphen}
           if [ $e -lt 10 ] && [ ${#e} -lt 2 ]; then
                e="0$e"
           fi
        i=0
        stringY=
        while [ $i -lt $index ]; do
          stringY=$stringY" ${stringZ[i]}"
          i=$((i+1))
        done
        stringY=$(echo "$stringY" |sed "s;';;g")
        shownameTemp=${stringY:1}
        stringY=$stringY" S$s""E$e"
        if [ "${stringY:0:1}" == " " ]; then
                stringY=${stringY:1}
        fi
        if [ $date -eq $today ]; then
                echo "$dlCOMMAND \"$stringY\"" >> "/tmp/tvshows_$today"
        else
                    #echo "$command -0 -C \"deluge-console add %s\" \"$stringY\""
         if [ "$DOWNLOAD_IT" == "download" ]; then
                 skipit=0
                 echo -en "${WHITE}Checking $shownameTemp...${NC}"
                 while read Bline; do
                   #echo "checking $shownameTemp against $Bline"
                   if [ "$Bline" == "$shownameTemp" ]; then
                        skipit=1
                        echo -e "SKIPPING"
                   else
                        echo -e ""
                   fi
                 done < $BROKEN_SHOWS
                 in_queue=$($WORKINGDIR/check_if_downloading "ShownameTemp")
                  if [ "$in_queue" == "queued" ]; then
                    skipit=1
                    echo -e "SKIPPING"
                  fi
                if [ $skipit != 1 ]; then
                stringX="$stringY $tv_source"
                 result=$($COMMAND -0 -C "deluge-console add %s" "$stringX")
                #echo -e "$stringX:\n$result" >> output.txt
                ll=$(echo "$result" |tail -n 1)
                        #if we didn't find an ettv, then do a normal search
                  if [ "$ll" != "Torrent added!" ]; then
                        stringX="$stringY"
                        result=$($COMMAND -0 -C "deluge-console add %s" "$stringX")
                        ll=$(echo "$result" |tail -n 1)
                  fi
                 if [ "$ll" == "Torrent added!" ]; then
                     echo "$command -0 -C \"deluge-console add %s\" \"$stringX\""
                     echo -e "${green} -- $ll -- ${NC}\n"
                     echo "* $line" >> $FN_OUT
                 else
                     echo -e "${yellow}$command \"$stringX\"${NC}"
                     echo -e "${red} -- $ll -- ${NC}\n"
                     echo "$line" >> $FN_OUT
                 fi
                fi #if skipit not 1
         else
                echo "$command -0 -C \"deluge-console add %s\" \"$stringY\""
         fi

        fi
  else
      if [ "$DOWNLOAD_IT" == "download" ]; then
        if [ "${line:0:1}" == "*" ]; then
          echo "Skipping $line"
          echo "$line" >> $FN_OUT
        fi
        if [ "${line:0:3}" == "---" ]; then
          echo "" >> $FN_OUT
          echo "$line" >> $FN_OUT
          echo "" >> $FN_OUT
        fi
        if [ "${line:0:3}" == "Gen" ]; then
         echo "$line" >> $FN_OUT
         echo "Updated: `date`" >> $FN_OUT
         echo "" >>$FN_OUT
        fi
      fi
  fi
#if [ "$DOWNLOAD_IT" == "download" ]; then rm -f $DIR/$FN_OUT; fi
done < "$DIR/$FN"
 if [ -f "/tmp/tvshows_$today" ]; then
        echo -e "\n${yellow}Airing today: (may be hard to find still):${NC}\n"
        while read line; do
                echo -e "$line"
        done < "/tmp/tvshows_$today"
        rm -f "/tmp/tvshows_$today"
 fi
 if [ -f "$DIR/$FN" ]; then
       echo -e "\n${yellow}Upcoming:${NC}\n"
       while read line; do
               echo -e "$line"
       done < "$DIR/$FN"
 fi

} #parse

